<?php
/**
 * TimeProfileApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Exivo
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * exivo api documentation
 *
 * The exivo API lets you manage an exivo site. To be allowed to use the API the Connection service needs to be activated. For every HTTP request the `siteId`, an `API_KEY` and the corresponding `API_SECRET` are required. All this information can be found in the [exivo app](https://customer.exivo.io/credentials). A new `API_KEY` can be generated in the app. Please note that `API_SECRET` is a confidential information and should be stored securely. After closing the dialogue or refreshing the page the secret can't be displayed anymore. If the secret is lost, a new key needs to be generated and the old must be deleted.
 *
 * OpenAPI spec version: 1.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.27
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Exivo;

use \Exivo\Configuration;
use \Exivo\ApiException;
use \Exivo\ObjectSerializer;

/**
 * TimeProfileApiTest Class Doc Comment
 *
 * @category Class
 * @package  Exivo
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TimeProfileApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for defineTimeProfile
     *
     * Creates a new time profile.
     *
     */
    public function testDefineTimeProfile()
    {
    }

    /**
     * Test case for getTimeProfile
     *
     * get time profile by ID.
     *
     */
    public function testGetTimeProfile()
    {
    }

    /**
     * Test case for getTimeProfiles
     *
     * get all timeprofiles.
     *
     */
    public function testGetTimeProfiles()
    {
    }

    /**
     * Test case for redefineTimeProfile
     *
     * Updates the time profile.
     *
     */
    public function testRedefineTimeProfile()
    {
    }

    /**
     * Test case for removeTimeProfile
     *
     * Deletes a time profile.
     *
     */
    public function testRemoveTimeProfile()
    {
    }
}
