<?php
/**
 * MediumApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * exivo api documentation
 *
 * The exivo API lets you manage an exivo site. To be allowed to use the API the Connection service needs to be activated. For every HTTP request the `siteId`, an `API_KEY` and the corresponding `API_SECRET` are required. All this information can be found in the [exivo app](https://customer.exivo.io/credentials). A new `API_KEY` can be generated in the app. Please note that `API_SECRET` is a confidential information and should be stored securely. After closing the dialogue or refreshing the page the secret can't be displayed anymore. If the secret is lost, a new key needs to be generated and the old must be deleted.
 *
 * OpenAPI spec version: 1.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.27
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * MediumApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MediumApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for activateMedium
     *
     * Activate medium by id.
     *
     */
    public function testActivateMedium()
    {
    }

    /**
     * Test case for assignMedium
     *
     * Assign medium to person.
     *
     */
    public function testAssignMedium()
    {
    }

    /**
     * Test case for blockMedium
     *
     * Block medium by id.
     *
     */
    public function testBlockMedium()
    {
    }

    /**
     * Test case for getMedia
     *
     * get all media.
     *
     */
    public function testGetMedia()
    {
    }

    /**
     * Test case for getMedium
     *
     * get medium by ID.
     *
     */
    public function testGetMedium()
    {
    }

    /**
     * Test case for registerMedium
     *
     * Register a new medium.
     *
     */
    public function testRegisterMedium()
    {
    }

    /**
     * Test case for unassignMedium
     *
     * Unassign medium from person.
     *
     */
    public function testUnassignMedium()
    {
    }

    /**
     * Test case for unregisterMedium
     *
     * Unregister a medium.
     *
     */
    public function testUnregisterMedium()
    {
    }
}
